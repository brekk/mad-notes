alias CoolRec = { j :: Boolean, k :: Boolean, l :: String }

/*
// invalid constructs
list = []
key = "key"
crap = {
  // can't be a numeric key
  7: "seven"
  // can't be a dynamic array key
  [list]: 7 
  // can't be a dynamic string key
  [key]: 7
}


// invalid
myPartialRecord = {j: true}
myPartialRecord.k = false
*/

type Item = Item(Integer, String, String)

alias PersonWithCart = { address :: String, cart :: List Item, name :: String }

customer = { name: "Brekk", address: "The Moon!", cart: [] }

// invalid
// getCustomerName :: PersonWithCart -> String
// getCustomerName = (person) => where (person) {
//   ({name, ...rest}) => name
// }



main = () => {
  nice = { cool: 2, _7: "seven" }
  myRecord :: CoolRec
  myRecord = { j: true, k: false, l: "hello" }

  myPartialRecord = { j: true }
  myOtherRecord = { l: "hello" }
  myRecord2 :: CoolRec
  myRecord2 = { ...myPartialRecord, k: false, l: "hello" }
}
